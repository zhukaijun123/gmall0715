<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- namespace 表示接口的全路径
    BaseAttrInfoMapper baseAttrInfoMapper = sqlSession.getMapper(BaseAttrInfoMapper.class)
    baseAttrInfoMapper.setxxx();
    getMapper :实现的原理  反射
        -->
<mapper namespace="com.atguigu.gmall0715.manage.mapper.BaseAttrInfoMapper">
    <!-- 表示方法执行完成之后，返回的结果集：
    id：表示唯一性
    type：表示返回结果集的数据类型
    autoMapping:表示自动映射
    -->
    <resultMap id="baseAttrInfoMap" type="com.atguigu.gmall0715.bean.BaseAttrInfo" autoMapping="true">
        <!-- id:表示主键
            property:表示实体类的属性名称
            column:表示通过sql 执行完成之后的  字段
        -->
        <id  property="id" column="id"></id>
        <!-- result :表示 普通字段-->
       <!-- <result property="attrName" column="attr_Name"></result>-->
        <!---
        ofType:子集合的返回类型
        -->

        <collection property="attrValueList" ofType="com.atguigu.gmall0715.bean.BaseAttrValue" autoMapping="true">
          <!--当有字段重复的情况下 则需要起个别名-->
            <id property="id" column="attr_value_id"></id>
            <!--<result property="valueName" column="value_Name"></result>-->
        </collection>
    </resultMap>
    <!--id：表示方法的名称-->
    <select id="selectBaseAttrInfoListByCatalog3Id" resultMap="baseAttrInfoMap" >
           SELECT
               bai.id,
               bai.attr_name,
               bai.catalog3_id,
               bav.id attr_value_id,
               bav.value_name,
               bav.attr_id
            FROM
               base_attr_info bai
            INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
            WHERE
               catalog3_id = #{0}
    </select>
</mapper>







































